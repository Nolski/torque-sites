---
# We need to know what user we're deploying as, but the reason
# here is complex.  At the base level, we need to know what
# user torquedata should be running as.  But more than that,
# we need to know who to 'become' in the ansible sense when
# we're not becoming root.  The reason we have to specify
# in a different variable than 'ansible_become_user', is
# because that variable overrides task level declarations,
# thereby overriding becoming root for tasks we need to.
# So we store in a different variable and use at the top level
# in main.yml.
depoloyment_user: __USERNAME__

# The root password needed to install mysql users
mysql_root_password: __PASSWORD__

# The DB password for the wikiuser that the mediawiki instance users.
db_password: __YOUR_DB_PW_HERE__

# Directory to install all of the mediawiki needs
# This must be an absolute path because of weirdness with unarchive
mediawiki_install_directory: __ABSOLUTE_INSTALLATION_DIRECTORY__

# The password for the mediawiki user admin to run automated
# commands against wikis (such as csv2wiki, setup, etc)
mediawiki_admin_password: __MEDIAWIKI_ADMIN__PASSWORD__

# The user and password for the mwlib pdf printing process
#
# The password must not have spaces.
mediawiki_mwlib_username: __MEDIAWIKI_MWLIB_USERNAME__
mediawiki_mwlib_password: __MEDIAWIKI_MWLIB_PASSWORD__

# The user and password for loading the wiki externally
# using csv2wiki in coordination with the macfound repository
mediawiki_csv2wiki_username: __MEDIAWIKI_CSV2WIKI_USERNAME__
mediawiki_csv2wiki_password: __MEDIAWIKI_CSV2WIKI_PASSWORD__

# Directory to install mwlib, and it's cache
#
# This must have a trailing slash.  The reason?  mwlib fails
# if there are two slashes with a really weird zip error
# and how it passes arguments around, and we made the decision
# to omit the slash in the supervisor template.
mwlib_install_directory: __INSTALLATION_DIRECTORY__

# Directory to install simplesaml
simplesaml_install_directory: __INSTALLATION_DIRECTORY__

# Salt for simplesaml, you can create easily via:
# LC_CTYPE=C tr -c -d '0123456789abcdefghijklmnopqrstuvwxyz' </dev/urandom | dd bs=32 count=1 2>/dev/null;echo
simplesaml_salt: __SALT__

# The metadata declaration, in the form of key => location.  The METADATA_NAME should
# correspond to the single sign on url you have set up in okta, which will be of the form
# http://<installationbox>/simplesaml/module.php/saml/sp/saml2-acs.php/__METADATA_NAME__
#
# Then the URL here should be the metadata url you receive from okta when looking at
# your application settings for "Identity Provider metadata"
#
# See https://developer.okta.com/code/php/simplesamlphp/ for more information
simplesaml_okta_metadata_name: __METADATA_NAME__
simplesaml_okta_metadata_url: __METADATA_URL__

# torquedata configuration follows
torquedata_install_directory: __INSTALLATION_DIRECTORY__

# The location for the proposals spreadsheet.  This will go away
# after torquedata becomes more configured as it runs, but for now
# the fact that this spreadsheet exists and looks like it does
# is logic in the code.
#
# Also note that ansible won't be installing the spreadsheet, just
# the configuration torquedata needs.
torquedata_spreadsheet_location: __SPREADSHEET_LOCATION__
